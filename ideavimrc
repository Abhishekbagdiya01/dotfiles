.ideavimrc is a configuration file for IdeaVim plugin. It uses
  the same commands as the original .vimrc configuration.
You can find a list of commands here: https://jb.gg/h38q75
Find more examples here: https://jb.gg/share-ideavimrc


==================== General Settings ====================
set scrolloff=5                 " Show context lines around cursor
set incsearch                   " Incremental search
set number                      " Show line numbers
set relativenumber              " Relative line numbers
set clipboard=unnamed           " Use system clipboard
set visualbell
set showmode
let $MYVIMRC = expand('~/.ideavimrc')
map Q gq                        " Use Q for formatting

" ==================== Leader Key ====================
let mapleader=" "

" ==================== WhichKey Configuration ====================
set which-key
set notimeout
let g:WhichKey_FontSize = 10
let g:WhichKey_PrefixColor = "#a403fe"
let g:WhichKey_CommandColor = "#01ffff"
let g:WhichKey_PrefixStyle = "bold"
let g:WhichKey_KeyStyle = "italic"
let g:WhichKey_SortOrder = "by_key_prefix_first"
let g:WhichKey_ShowTypedSequence = "true"

" ==================== File Navigation ====================
nnoremap <leader>e :action ActivateProjectToolWindow<CR>
let g:WhichKeyDesc_e = "Project Sidebar"

nnoremap <leader>/ :action FindInPath<CR>
let g:WhichKeyDesc_"/" = "Search in Project (Live Grep)"

nnoremap <leader><leader> :action RecentFiles<CR>
let g:WhichKeyDesc_"<leader>" = "Recent Files"

nnoremap <leader>o :action FileStructurePopup<CR>
let g:WhichKeyDesc_o = "Outline / File Structure"

nnoremap <C-f> :action GotoFile<CR>
nnoremap <C-r> :action RecentFiles<CR>

" ==================== Buffers & Tabs ====================
nnoremap <leader>bb :action Switcher<CR>
let g:WhichKeyDesc_bb = "Buffer Switcher"

nnoremap <leader>bn :action NewFile<CR>
let g:WhichKeyDesc_bn = "New File"

nnoremap <leader>bd :action CloseEditor<CR>
let g:WhichKeyDesc_bd = "Close Editor Tab"

nnoremap <leader>q :action CloseContent<CR>
let g:WhichKeyDesc_q = "Close Current File"

nnoremap <S-l> :bnext<CR>
nnoremap <S-h> :bprevious<CR>

nnoremap ]b :action NextTab<CR>
nnoremap [b :action PreviousTab<CR>
let g:WhichKeyDesc_"]b" = "Next Tab"
let g:WhichKeyDesc_"[b" = "Previous Tab"

" ==================== Terminal ====================
nnoremap <leader>tt :action ActivateTerminalToolWindow<CR>
let g:WhichKeyDesc_tt = "Toggle Terminal"

nnoremap <leader>ts :action StartNewConsole<CR>
let g:WhichKeyDesc_ts = "New Terminal Tab"

nmap <C-t> <Action>(ActivateTerminalToolWindow)
nmap <leader>t <Action>(Terminal.OpenInTerminal)

" ==================== Code Actions ====================
nnoremap <leader>cf :action ReformatCode<CR>
let g:WhichKeyDesc_cf = "Reformat Code"

nnoremap <leader>ci :action OptimizeImports<CR>
let g:WhichKeyDesc_ci = "Optimize Imports"

nnoremap <leader>ca :action ShowIntentionActions<CR>
vnoremap <leader>ca :action ShowIntentionActions<CR>
let g:WhichKeyDesc_ca = "Code Action"

nnoremap <leader>cA :action ShowIntentionActions<CR>
let g:WhichKeyDesc_cA = "Source Action"

nnoremap <leader>cc :action RunToCursor<CR>
vnoremap <leader>cc :action RunToCursor<CR>
let g:WhichKeyDesc_cc = "Run to Cursor"

nnoremap <leader>cR :action MoveFile<CR>
let g:WhichKeyDesc_cR = "Rename/Move File"

" ==================== LSP ====================
nnoremap <leader>cl :action LspShowToolWindow<CR>
let g:WhichKeyDesc_cl = "LSP Tool Window"

nnoremap <leader>cC :action LspShowToolWindow<CR>
let g:WhichKeyDesc_cC = "Show LSP Window"

" ==================== Rename & Find ====================
nnoremap <leader>cr :action RenameElement<CR>
let g:WhichKeyDesc_cr = "Rename Symbol"

nnoremap <leader>rn :action RenameElement<CR>
let g:WhichKeyDesc_rn = "Rename Symbol"

nnoremap <leader>gr :action FindUsages<CR>
let g:WhichKeyDesc_gr = "Find Usages"

" ==================== Peek ====================
nnoremap <leader>pd :action ShowQuickDefinition<CR>
let g:WhichKeyDesc_pd = "Peek Definition"

nnoremap <leader>pi :action ShowImplementations<CR>
let g:WhichKeyDesc_pi = "Peek Implementations"

nnoremap <leader>* :action HighlightUsagesInFile<CR>
let g:WhichKeyDesc_* = "Highlight Symbol in File"

" ==================== Navigation & Docs ====================
nnoremap K :action QuickJavaDoc<CR>
nnoremap gK :action ParameterInfo<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gD :action GotoDeclaration<CR>
nnoremap gr :action FindUsages<CR>
nnoremap gI :action GotoImplementation<CR>
nnoremap gy :action GotoTypeDeclaration<CR>
nmap gne <Action>(GotoNextError)
nmap gpe <Action>(GotoPreviousError)
nnoremap <A-n> :action MethodDown<CR>
nnoremap <A-p> :action MethodUp<CR>
nnoremap [[ :action MethodDown<CR>
nnoremap ]] :action MethodUp<CR>
let g:WhichKeyDesc_"[[" = "Go Down (Method)"
let g:WhichKeyDesc_"]]" = "Go Up (Method)"

" ==================== Misc ====================
nnoremap <leader>; A;<Esc>
let g:WhichKeyDesc_";" = "Add Semicolon"
nnoremap <leader>, A,<Esc>
let g:WhichKeyDesc_"," = "Add Comma"
nnoremap <leader>? :action IdeavimWhichKey<CR>
let g:WhichKeyDesc_"?" = "Show WhichKey Menu"

" ==================== Quality of Life Remaps ====================
nnoremap U <C-r>
nnoremap x "_x
nnoremap X "_X
nnoremap cw "_cw
nnoremap ciw "_ciw
vnoremap p "_dP
nnoremap <C-d> yyp
nnoremap F ^
nnoremap vF v^
nnoremap vL v$
nnoremap B %
nnoremap <C-c> ^vg_y
nmap <C-a> gg<S-v>G
imap jk <Esc>

" ==================== Surround Shortcuts ====================
nmap <s> :action AceAction<CR>
nmap <Space>w :action AceAction<CR>
nmap <Space>l :action AceLineAction<CR>
nmap <Space>t :action AceTargetAction<CR>
" ==================== Surround Shortcuts ====================
xnoremap <leader>s xi ()<ESC>l"_xP
xnoremap <leader>s[ xi []<ESC>l"_xP
xnoremap <leader>s] xi []<ESC>l"_xP
xnoremap <leader>s{ xi {}<ESC>l"_xP
xnoremap <leader>s} xi {}<ESC>l"_xP

" ==================== Window Management ====================
nmap sv <Action>(SplitVertically)
nmap ss <Action>(SplitHorizontally)
nmap sm <Action>(MoveEditorToOppositeTabGroup)

" ==================== Debugging ====================
nmap <leader>dc <Action>(Debug)
nmap <leader>ds <Action>(Stop)
nmap <leader>db <Action>(ToggleLineBreakpoint)

" ==================== Run ====================
nmap <leader>rc <Action>(Run)
nmap <leader>rx <Action>(ChooseRunConfiguration)
nmap <leader>rr <Action>(Rerun)
nmap <leader>rs <Action>(Stop)
nmap <leader>rt <Action>(RunTests)

" ==================== TODO ====================
nmap <leader>to <Action>(ActivateTODOToolWindow)

" ==================== Zen Mode ====================
nmap <C-z> <Action>(ToggleDistractionFreeMode)

" ==================== Line Movement ====================
nmap <C-j> <Action>(MoveLineDown)
nmap <C-k> <Action>(MoveLineUp)

" ==================== Git  ====================
nmap <leader>gs :action Git.ShowBranches<CR>
nmap <leader>gb :action Git.Branches<CR>
nmap <leader>gl :action Git.Log<CR>



" ==================== Plugins ====================

" NERDTree
Plug 'preservim/nerdtree'
map <C-n> :NERDTree<CR>
map <C-q> :NERDTreeClose<CR>

Plug 'machakann/vim-highlightedyank'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'


" Multiple Cursor
Plug 'terryma/vim-multiple-cursors'
" Remap multiple-cursors shortcuts to match terryma/vim-multiple-cursors
nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
xmap <C-x> <Plug>SkipOccurrence
xmap <C-p> <Plug>RemoveOccurrence

" Note that the default <A-n> and g<A-n> shortcuts don't work on Mac due to dead keys.
" <A-n> is used to enter accented text e.g. Ã±
" Feel free to pick your own mappings that are not affected. I like to use <leader>
nmap <leader><C-n> <Plug>AllWholeOccurrences
xmap <leader><C-n> <Plug>AllWholeOccurrences
nmap <leader>g<C-n> <Plug>AllOccurrences
xmap <leader>g<C-n> <Plug>AllOccurrences



" ==================== Insert Mode Enhancements ====================
inoremap <C-n> <Down>
inoremap <C-p> <Up>
inoremap <C-k> <C-o>:action ParameterInfo<CR>

" ==================== Reload Config ====================
nnoremap <leader>sv :source $MYVIMRC<CR>
let g:WhichKeyDesc_sv = "Reload Config"

" configurations
nmap \\v <Action>(VimActions)


