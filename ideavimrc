" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc


"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" ‚ù§Ô∏è WhichKey Plugin Configs
set which-key
set notimeout
let g:WhichKey_FontSize = 10
let g:WhichKey_PrefixColor = "#a403fe"
let g:WhichKey_CommandColor = "#01ffff"
let g:WhichKey_PrefixStyle = "bold"
let g:WhichKey_KeyStyle = "italic"
let g:WhichKey_SortOrder = "by_key_prefix_first"
let g:WhichKey_ShowTypedSequence = "true"

" üß† Leader key as space
let mapleader=" "

" üß© Bindings and their WhichKey Descriptions

" == General ==
nnoremap <leader>? :action IdeavimWhichKey<CR>
let g:WhichKeyDesc_["?"] = "Show WhichKey Menu"

nnoremap <leader><leader> :action RecentFiles<CR>
let g:WhichKeyDesc_["<leader>"] = "Recent Files"

nnoremap <leader>s :action SearchEverywhere<CR>
let g:WhichKeyDesc_s = "Search Everywhere (Double Shift)"

" == Files and Sidebar ==
nnoremap <leader>e :action ActivateProjectToolWindow<CR>
let g:WhichKeyDesc_e = "Project Sidebar"


nnoremap <leader>/ :action FindInPath<CR>
let g:WhichKeyDesc_["/"] = "Search in Project (Live Grep)"

nnoremap <leader>q :action CloseContent<CR>
let g:WhichKeyDesc_q = "Close Current File"

nnoremap <leader>bd :action CloseEditor<CR>
let g:WhichKeyDesc_bd = "Close Editor Tab"

" == LSP / Code ==
nnoremap <leader>cl :action LspShowToolWindow<CR>
let g:WhichKeyDesc_cl = "LSP Tool Window"

let g:WhichKeyDesc_c = "Code Action"
nnoremap <leader>ca :action ShowIntentionActions<CR>
vnoremap <leader>ca :action ShowIntentionActions<CR>
let g:WhichKeyDesc_ca = "Code Action"

nnoremap <leader>cc :action RunToCursor<CR>
vnoremap <leader>cc :action RunToCursor<CR>
let g:WhichKeyDesc_cc = "Run to Cursor"

nnoremap <leader>cC :action LspShowToolWindow<CR>
let g:WhichKeyDesc_cC = "Show LSP Window"

nnoremap <leader>cr :action RenameElement<CR>
let g:WhichKeyDesc_cr = "Rename Symbol"

nnoremap <leader>cR :action MoveFile<CR>
let g:WhichKeyDesc_cR = "Rename/Move File"

nnoremap <leader>cA :action ShowIntentionActions<CR>
let g:WhichKeyDesc_cA = "Source Action"

" == References ==
nnoremap <leader>rn :action RenameElement<CR>
let g:WhichKeyDesc_rn = "Rename Symbol"

nnoremap <leader>gr :action FindUsages<CR>
let g:WhichKeyDesc_gr = "Find Usages"

" == Ace Actions ==
map s <Action>(AceAction)
map sv <Action>(AceTargetAction)
map sl <Action>(AceLineAction)
let g:WhichKeyDesc_s = "Ace Action"
let g:WhichKeyDesc_sv = "Ace Target Action"
let g:WhichKeyDesc_sl = "Ace Line Action"

" == Tab Navigation ==
nnoremap ]b :action NextTab<CR>
nnoremap [b :action PreviousTab<CR>
let g:WhichKeyDesc_"]b" = "Next Tab"
let g:WhichKeyDesc_"[b" = "Previous Tab"

" == Reference Navigation ==
nnoremap ]] :action MethodUp<CR>
nnoremap [[ :action MethodDown<CR>
nnoremap <A-n> :action MethodDown<CR>
nnoremap <A-p> :action MethodUp<CR>
let g:WhichKeyDesc_"]]"] = "Go Up (Method)"
let g:WhichKeyDesc_"[["] = "Go Down (Method)"

" == Signature Help ==
inoremap <C-k> <C-o>:action ParameterInfo<CR>

" == Docs and Navigation ==
nnoremap K :action QuickJavaDoc<CR>
nnoremap gK :action ParameterInfo<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gr :action FindUsages<CR>
nnoremap gI :action GotoImplementation<CR>
nnoremap gy :action GotoTypeDeclaration<CR>
nnoremap gD :action GotoDeclaration<CR>

" == Commentary + Yank Highlight ==
Plug 'machakann/vim-highlightedyank'
Plug 'tpope/vim-commentary'

" == Misc ==
inoremap <C-n> <Down>
inoremap <C-p> <Up>
map Q gq
set incsearch
set scrolloff=5
set number
set relativenumber
set clipboard=unnamed

" Do incremental searching.
set incsearch

" Don't use Ex mode, use Q for formatting.
map Q gq

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'


"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
"" Map \r to the Reformat Code action
"map \r <Action>(ReformatCode)

"" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

"" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)
